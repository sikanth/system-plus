'use strict'

const Logger = require('../logger')
const semver = require('semver')
const Util = require('../util')

/**
 * stackify-logger instrumentation
 * https://www.npmjs.com/package/stackify-logger
 * @param stackifyLogger
 * @param tracer
 * @param shimmer
 * @param version
 */
module.exports = function (stackifyLogger, tracer, shimmer, version) {
  if (!semver.satisfies(version, '>=3.0')) {
    Logger.debug('stackify-logger version %s not supported', version)
    return stackifyLogger
  }

  shimmer.wrap(stackifyLogger, 'push', wrapPush)

  return stackifyLogger

  function wrapPush (original) {
    return function wrappedPush (level, msg, meta, req, err, logId, transactionId) {
      let span
      let transaction = tracer.getActiveTransaction()
      if (transaction) {
        logId = Util.makeId()
        transactionId = transaction._id

        // create log span
        span = tracer.createSpan('stackify-logger.log')
        if (span) {
          span.addProperty('CATEGORY', 'Stackify')
          span.addProperty('SUBCATEGORY', 'Log')
          span.addProperty('ID', logId)
        }
      }
      let newArguments = [level, msg, meta, req, err, logId, transactionId]
      let result = original.apply(this, newArguments)

      if (span) {
        tracer.endSpan(span)
      }

      return result
    }
  }
}
