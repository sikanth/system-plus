'use strict'

const Util = require('../util')
const URL = require('url')
const endOfStream = require('end-of-stream')

/**
 * http2 module instrumentation
 * https://nodejs.org/api/http.html
 * @param http2
 * @param tracer
 * @param shimmer
 * @param version
 */
module.exports = function (http2, tracer, shimmer, version) {
  shimmer.wrap(http2, 'createServer', wrapCreateServer)
  shimmer.wrap(http2, 'createSecureServer', wrapCreateServer)

  return http2

  function wrapCreateServer (original) {
    return function wrappedCreateServer (options, handler) {
      let server = original.apply(this, arguments)
      shimmer.wrap(server.constructor.prototype, 'emit', wrapEmit)

      return server
    }
  }

  function wrapEmit (original) {
    let patched = false
    return function wrappedEmit (event, stream, headers) {
      tracer.getSession().run(() => {
        if (event === 'stream') {
          if (!patched) {
            patched = true
            let proto = stream.constructor.prototype
            shimmer.wrap(proto, 'end', endTrans)
          }
          tracer.startTransaction('http2.stream')
          tracer.getActiveRootSpan().addProperty('METHOD', headers[':method'])
          let url = URL.parse(headers[':scheme'] + '://' + headers[':authority'] + headers[':path'])
          tracer.getActiveRootSpan().addProperty('URL', Util.removeTrailingSlash(url.href))

          endOfStream(stream, function () {
            endTrans()
          })
        }

        return original.apply(this, arguments)
      })
    }
  }

  function endTrans (original) {
    return function (headers) {
      tracer.endTransaction()
      return original.apply(this, arguments)
    }
  }
}
