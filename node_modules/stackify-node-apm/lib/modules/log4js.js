'use strict'

const Logger = require('../logger')
const semver = require('semver')

/**
 * log4js Instrumentation
 * https://www.npmjs.com/package/log4js
 * @param log4js
 * @param tracer
 * @param shimmer
 * @param version
 */
module.exports = function (log4js, tracer, shimmer, version) {
  let log4jslogging = function (original) {
    return function wrapped () {
      let result = original.apply(this, arguments)
      Logger.info('[instrumentation/log4js] shimming log4js.log() function')
      shimmer.wrap(result, '_log', function (original) {
        return function wrap () {
          let msgs = (arguments[1] && arguments[1][0]) ? arguments[1][0] : ''
          let msg = ((msgs && typeof (msgs) === 'object') && msgs.message) ? msgs.message : msgs
          let level = (arguments[0] && arguments[0].levelStr) ? arguments[0].levelStr : ''
          let span = tracer.createSpan('log4js.' + level)
          if (span) {
            span.addProperty('CATEGORY', 'Log')
            span.addProperty('SUBCATEGORY', 'log4js')
            span.addProperty('MESSAGE', msg)
            span.addProperty('LEVEL', level)
            span.addProperty('PREFIX', 'TRUE')
            if ((msgs && typeof (msgs) === 'object') && msgs.stack) span.addProperty('EXCEPTION', msgs.stack)
            tracer.endSpan(span)
          }
        }
      })

      return result
    }
  }

  if (tracer.getConfiguration().prefixEnabled) {
  /**
   * Currently, log4js 1.x is not yet supported but starting 2.x upto 6.x is supported.
   */
    if (semver.satisfies(version, '>=2.0')) {
      shimmer.wrap(log4js, 'getLogger', function (original) {
        return log4jslogging(original)
      })
    } else {
      Logger.debug('log4js version %s not supported', version)
    }
  }

  return log4js
}
